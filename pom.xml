<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.orange.oss</groupId>
	<artifactId>matomo-cf-service</artifactId>
	<organization>
		<name>Orange S.A. - Open Source Software</name>
	</organization>
	<version>0.8.0</version>
	<name>matomo-cf-service</name>
	<description>An implementation of "Matomo as a Service" exposed through an OSB API and relying on SpringBoot and CloudFoundry</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.9.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<spring-cloud.version>Hoxton.BUILD-SNAPSHOT</spring-cloud.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <junit.jupiter.version>5.5.1</junit.jupiter.version>
        <skip.assembly>false</skip.assembly>
        <gson.version>2.8.1</gson.version>
        <jodatime.version>2.9.9</jodatime.version>
        <jackson.version>2.10.0</jackson.version>
        <swagger.version>2.0.9</swagger.version>
        <swagger-codegen.version>3.0.11</swagger-codegen.version>
        <swagger-parser.version>2.0.14</swagger-parser.version>
        <swagger2markup.version>1.3.3</swagger2markup.version>
        <springfox.version>2.9.2</springfox.version>
        <rest-assured.version>4.2.0</rest-assured.version>
        <h2.version>1.4.195</h2.version>
        <mariadb.version>2.5.0</mariadb.version>
        <clooudfoundry-client.version>3.15.0.RELEASE</clooudfoundry-client.version>
        <jacoco.version>0.8.5</jacoco.version>
        <dependency.locations.enabled>false</dependency.locations.enabled>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
        	<groupId>org.springframework.plugin</groupId>
        	<artifactId>spring-plugin-core</artifactId>
        	<version>1.2.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-open-service-broker</artifactId>
			<version>3.1.1.RELEASE</version>
		</dependency>
		<dependency>
		    <groupId>io.projectreactor</groupId>
		    <artifactId>reactor-core</artifactId>
		</dependency>
		<!--dependency>
			<groupId>org.joda</groupId>
			<artifactId>com.springsource.org.joda.time</artifactId>
			<version>1.6.2</version>
		</dependency-->
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20180813</version>
		</dependency>
		
		<dependency>
    		<groupId>org.cloudfoundry</groupId>
    		<artifactId>cloudfoundry-client</artifactId>
    		<version>${clooudfoundry-client.version}</version>
		</dependency>
		<dependency>
    		<groupId>org.cloudfoundry</groupId>
    		<artifactId>cloudfoundry-client-reactor</artifactId>
    		<version>${clooudfoundry-client.version}</version>
		</dependency>
		<dependency>
    		<groupId>org.cloudfoundry</groupId>
    		<artifactId>cloudfoundry-operations</artifactId>
    		<version>${clooudfoundry-client.version}</version>
		</dependency>
		<dependency>
    		<groupId>org.cloudfoundry</groupId>
    		<artifactId>cloudfoundry-util</artifactId>
    		<version>${clooudfoundry-client.version}</version>
		</dependency>
 		
        <!-- Read Swagger definition to extract an expose API dÃ©finition -->
        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>${swagger-parser.version}</version>
        </dependency>
        <!-- Swagger-parser need swagger Version 1.5.8 and not 1.5.3 -->
        <dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger.version}</version>
		</dependency>
        <dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.threeten</groupId>
			<artifactId>threetenbp</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.joschi.jackson</groupId>
			<artifactId>jackson-datatype-threetenbp</artifactId>
			<version>2.6.4</version>
		</dependency>
        <!--dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-maven-plugin</artifactId>
			<version>${swagger.version}</version>
		</dependency-->
        <!-- Swagger-parser need org/apache/commons/lang3/Validate -->
        <!--dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency-->
        <!-- Integrate Swagger-ui : /swagger-ui.html -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.version}</version>
        </dependency>
        <!-- Expose API definition as Swagger/Json : /v2/apidocs -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
		    <groupId>org.jsoup</groupId>
		    <artifactId>jsoup</artifactId>
		    <version>1.12.1</version>
		</dependency>
		
		<dependency>
		    <groupId>com.hierynomus</groupId>
		    <artifactId>sshj</artifactId>
		    <version>0.27.0</version>
		</dependency>

		<!-- dependencies that are used in test phase -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <!-- >version>${rest-assured.version}</version-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-schema-validator</artifactId>
            <!-- >version>${rest-assured.version}</version-->
            <scope>test</scope>
        </dependency>
		
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.22.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>ci-management</report>
                            <report>dependencies</report>
                            <report>dependency-info</report>
                            <!-- <report>dependency-management</report> -->
                            <report>distribution-management</report>
                            <report>index</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>mailing-lists</report>
                            <report>modules</report>
                            <!-- <report>plugin-management</report> -->
                            <report>plugins</report>
                            <report>scm</report>
                            <report>summary</report>
                            <report>team</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
		<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>target/jacoco.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
            <!--plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>${swagger-codegen.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>src/main/resources/swagger/matomo-service-admin.json</inputSpec>
                            <apiPackage>com.orange.oss.matomocfservice.api</apiPackage>
                            <modelPackage>com.orange.oss.matomocfservice.api.model</modelPackage>
                            <language>spring</language>
                        </configuration>
                    </execution>
                </executions>
            </plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <!--execution>
                    	<id>clean-swagger-gen</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <move file="${project.build.directory}/generated-sources/swagger/src/main/java/com/orange/oss/matomocfservice/api/PlatformsApiController.java" tofile="${project.build.directory}/generated-sources/swagger/src/main/java/com/orange/oss/matomocfservice/api/PlatformsApiController.java.orig"/>
                                <move file="${project.build.directory}/generated-sources/swagger/src/main/java/io/swagger/Swagger2SpringBoot.java" tofile="${project.build.directory}/generated-sources/swagger/src/main/java/io/swagger/Swagger2SpringBoot.java.orig"/>
                            </target>
                        </configuration>
                    </execution-->
                    <execution>
                    	<id>package-piwik-releases</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
         					<target>
               					<exec executable="bash">
              						<arg value="src/main/tools/scanrel.sh" />
              						<!--arg value="-d" /--><!-- Enable arg if you need to run Matomo instances in debug mode -->
             						<!--arg value="inputOne" /-->
								</exec>
               					<exec executable="bash">
              						<arg value="src/main/tools/tools4depl.sh" />
             						<!--arg value="inputOne" /-->
								</exec>
							</target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<plugin>
    			<groupId>com.ruleoftech</groupId>
    			<artifactId>markdown-page-generator-plugin</artifactId>
    			<version>2.1.0</version>
            	<executions>
                	<execution>
                    	<phase>process-resources</phase>
                    	<goals>
                    	    <goal>generate</goal>
                 	   </goals>
             	   </execution>
				</executions>
				<configuration>
					<inputDirectory>src/main/doc/markdown</inputDirectory>
					<outputDirectory>target/classes/templates</outputDirectory>
					<headerHtmlFile>src/main/doc/markdown/html/header.html</headerHtmlFile>
					<footerHtmlFile>src/main/doc/markdown/html/footer.html</footerHtmlFile>
					<pegdownExtensions>TABLES,FENCED_CODE_BLOCKS,AUTOLINKS,TASKLISTITEMS,SMARTYPANTS</pegdownExtensions>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

</project>
